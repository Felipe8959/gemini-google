# Importar bibliotecas necessárias
from pyspark.sql.functions import udf, col
from pyspark.sql.types import StringType, DoubleType, BooleanType
import nltk
from nltk.corpus import stopwords
from textblob import TextBlob
import re

# Baixar recursos necessários do NLTK (se ainda não estiverem disponíveis)
nltk.download('punkt')
nltk.download('stopwords')

# Lista de palavras inapropriadas (exemplo)
palavras_inapropriadas = ['palavrão1', 'palavrão2', 'palavrão3']  # Substitua pelas palavras relevantes

# Função de pré-processamento
def preprocessamento(texto):
    # Remover informações pessoais e caracteres especiais
    texto = re.sub(r'\d+', '', texto)  # Remove números
    texto = re.sub(r'[^\w\s]', '', texto)  # Remove pontuação
    texto = re.sub(r'\s+', ' ', texto)  # Remove espaços extras
    texto = texto.strip().lower()  # Remove espaços no início/fim e converte para minúsculas
    return texto

preprocessamento_udf = udf(preprocessamento, StringType())

# Função de análise de sentimento
def analise_sentimento(texto):
    blob = TextBlob(texto)
    sentimento = blob.sentiment.polarity
    return float(sentimento)

analise_sentimento_udf = udf(analise_sentimento, DoubleType())

# Função para detectar palavras inapropriadas
def contem_palavras_inapropriadas(texto):
    for palavra in palavras_inapropriadas:
        if palavra in texto:
            return True
    return False

contem_palavras_inapropriadas_udf = udf(contem_palavras_inapropriadas, BooleanType())

# Função para resumir o texto
def resumir_texto(texto):
    sentencas = nltk.sent_tokenize(texto)
    if len(sentencas) > 2:
        resumo = ' '.join([sentencas[0], sentencas[-1]])
    else:
        resumo = texto
    return resumo

resumir_texto_udf = udf(resumir_texto, StringType())

# Aplicar as funções ao DataFrame
df = df.withColumn('Texto_Prep', preprocessamento_udf(col('DESCRICAO DA MANIFESTACAO')))
df = df.withColumn('Sentimento', analise_sentimento_udf(col('Texto_Prep')))
df = df.withColumn('Contem_Palavras_Inapropriadas', contem_palavras_inapropriadas_udf(col('Texto_Prep')))
df = df.withColumn('Resumo', resumir_texto_udf(col('Texto_Prep')))

# Selecionar colunas relevantes para visualização
df_resultado = df.select('DESCRICAO DA MANIFESTACAO', 'Sentimento', 'Contem_Palavras_Inapropriadas', 'Resumo')

# Mostrar os resultados
df_resultado.show(truncate=False)
