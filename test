import os
import zipfile
import win32com.client
import paramiko

# Configurações
email_subject = 'PROT_080_OUV_USUARIOS - Arquivo para VOX'
save_directory = r'C:\caminho\para\diretorio\local'
sftp_host = 'sftp.exemplo.com'
sftp_port = 22
sftp_username = 'usuario'
sftp_password = 'senha'
remote_directory = '/caminho/remoto/para/diretorio'

def download_attachment(subject, save_folder):
    # Conecta ao Outlook
    outlook = win32com.client.Dispatch('Outlook.Application')
    mapi = outlook.GetNamespace('MAPI')
    inbox = mapi.GetDefaultFolder(6)  # 6 é a pasta da caixa de entrada
    messages = inbox.Items
    
    for message in messages:
        if message.Subject == subject:
            attachments = message.Attachments
            for attachment in attachments:
                if attachment.FileName.endswith('.zip'):
                    zip_path = os.path.join(save_folder, attachment.FileName)
                    attachment.SaveAsFile(zip_path)
                    return zip_path
    return None

def extract_zip(zip_path, extract_to_folder):
    with zipfile.ZipFile(zip_path, 'r') as zip_ref:
        zip_ref.extractall(extract_to_folder)

def upload_file_to_sftp(file_path, remote_directory):
    transport = paramiko.Transport((sftp_host, sftp_port))
    transport.connect(username=sftp_username, password=sftp_password)
    
    sftp = paramiko.SFTPClient.from_transport(transport)
    try:
        remote_path = os.path.join(remote_directory, os.path.basename(file_path))
        sftp.put(file_path, remote_path)
        print(f"Arquivo {os.path.basename(file_path)} enviado para {remote_directory}")
    finally:
        sftp.close()
        transport.close()

def main():
    zip_file_path = download_attachment(email_subject, save_directory)
    if zip_file_path:
        extract_zip(zip_file_path, save_directory)
        for root, _, files in os.walk(save_directory):
            for file in files:
                if file.endswith('.txt'):
                    file_path = os.path.join(root, file)
                    upload_file_to_sftp(file_path, remote_directory)
                    print(f'Arquivo {file} enviado para o diretório remoto.')
    else:
        print('Nenhum anexo encontrado com o assunto especificado.')

if __name__ == '__main__':
    main()
